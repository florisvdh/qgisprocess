% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qgis-function.R
\name{qgis_function}
\alias{qgis_function}
\alias{qgis_pipe}
\title{Create functions from QGIS algorithms}
\usage{
qgis_function(algorithm, ...)

qgis_pipe(.data, algorithm, ..., .quiet = TRUE)
}
\arguments{
\item{algorithm}{A qualified algorithm name (e.g., "native:filedownloader") or
a path to a QGIS model file.}

\item{...}{Default values to set when using \code{\link[=qgis_function]{qgis_function()}}.
These values are evaluated once and immediately, so you shouldn't
call \code{\link[=qgis_tmp_file]{qgis_tmp_file()}} here.}

\item{.data}{Passed to the first input of \code{algorithm}.}

\item{.quiet}{Use \code{TRUE} to suppress output from processing algorithms.}
}
\description{
As opposed to \code{\link[=qgis_run_algorithm]{qgis_run_algorithm()}}, \code{\link[=qgis_function]{qgis_function()}} creates a callable
function based on the argument metadata provided by \code{\link[=qgis_arguments]{qgis_arguments()}}.
Unlike \code{\link[=qgis_run_algorithm]{qgis_run_algorithm()}}, \code{\link[=qgis_function]{qgis_function()}} sets the default value
of \code{.quiet} to \code{TRUE} to make the function more usable within other
R code. Similarly, \code{\link[=qgis_pipe]{qgis_pipe()}} wraps \code{\link[=qgis_run_algorithm]{qgis_run_algorithm()}}, passing
its first argument to the first input to \code{algorithm}.
}
\examples{
if (has_qgis()) {
  qgis_buffer <- qgis_function("native:buffer")
  qgis_buffer(
    system.file(
      "longlake/longlake_depth.gpkg",
      package = "qgisprocess"
    ),
    DISTANCE = 10
  )
}

if (has_qgis()) {
  qgis_pipe(
    system.file(
      "longlake/longlake_depth.gpkg",
      package = "qgisprocess"
    ),
    "native:buffer",
    DISTANCE = 10
  )
}

}
